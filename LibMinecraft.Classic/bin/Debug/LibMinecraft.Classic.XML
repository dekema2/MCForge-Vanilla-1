<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LibMinecraft.Classic</name>
    </assembly>
    <members>
        <member name="T:LibMinecraft.Classic.Model.Packets.WorldInitializePacket">
            <summary>
            Packet sent to client when initializing level transfer.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.Packets.Packet">
            <summary>
            The abstract model for LibMinecraft Classic packets
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Model.Packets.Packet.Packets">
            <summary>
            A full list of packets.
            </summary>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.Packet.GetPacket(LibMinecraft.Classic.Model.PacketID,System.Boolean)">
            <summary>
            Gets a Packet for the specified PacketID.  If IsServer
            is set to false, it assumes that the packet is being
            handled by a client.
            </summary>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.Packet.ReadPacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Reads a packet from a RemoteClient.
            </summary>
            <param name="Client">The sender of said packet.</param>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.Packet.ReadPacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Reads an incoming packet from a ClassicClient
            </summary>
            <param name="Client">The sender of said packet.</param>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.Packet.WritePacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Writes a packet to a RemoteClient.
            </summary>
            <param name="Client">The RemoteClient to be written to.</param>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.Packet.WritePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Writes a packet to a ClassicClient
            </summary>
            <param name="Client">The client that the packet will be written or sent to.</param>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.Packet.HandlePacket(LibMinecraft.Classic.Server.ClassicServer,LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Deals with an incoming packet from a RemoteClient/ClassicServer
            </summary>
            <param name="Server">The server involved</param>
            <param name="Client">The RemoteClient involved</param>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.Packet.HandlePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Deals with a packet handing a ClassicClient rather than a RemoteClient.
            </summary>
            <param name="Client">The ClassicClient sender.</param>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.Packet.PacketID">
            <summary>
            Gets the packet ID.
            </summary>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.Packet.Length">
            <summary>
            -1 for non-explicit lengths 
            Includes packet ID
            </summary>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.WorldInitializePacket.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.Packets.WorldInitializePacket"/> class.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.WorldInitializePacket.ReadPacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.WorldInitializePacket.ReadPacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.WorldInitializePacket.WritePacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.WorldInitializePacket.WritePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.WorldInitializePacket.HandlePacket(LibMinecraft.Classic.Server.ClassicServer,LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Server">The server.</param>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.WorldInitializePacket.HandlePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.WorldInitializePacket.PacketID">
            <summary>
            Gets the packet ID.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.WorldInitializePacket.Length">
            <summary>
            -1 for non-explicit lengths
            Includes packet ID
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.WorldInitializePacket.Payload">
            <summary>
            Gets the payload.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.Block">
            <summary>
            An abstract model for strongly-typed
            representation of blocks
            </summary>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Block.op_Implicit(LibMinecraft.Classic.Model.Block)~System.Byte">
            <summary>
            Converts a Block to a byte
            </summary>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Block.op_Implicit(System.Byte)~LibMinecraft.Classic.Model.Block">
            <summary>
            Converts a byte to a Block
            </summary>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Block.BlockPlaced(LibMinecraft.Classic.Model.World,LibMinecraft.Classic.Model.Vector3,LibMinecraft.Classic.Model.Vector3,System.Byte)">
            <summary>
            Called when this block is placed
            </summary>
            <param name="world">The world it was placed in</param>
            <param name="position">The position it was placed at</param>
            <param name="blockClicked">The location of the block left clicked upon placing</param>
            <param name="facing">The facing of the placement</param>
            <returns>False to override placement</returns>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Block.BlockDestroyed(LibMinecraft.Classic.Model.World,LibMinecraft.Classic.Model.Vector3)">
            <summary>
            Called when this block is destroyed
            </summary>
            <param name="world">The world the block used to exist in</param>
            <param name="position">The position the block used to occupy</param>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Block.BlockID">
            <summary>
            The Block ID for this block
            </summary>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Block.BlockName">
            <summary>
            This block's friendly name for client inventories.
            By default, returns the name of the Type.
            </summary>
        </member>
        <member name="P:LibMinecraft.Classic.Model.YellowClothBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.WhiteClothBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.GravelBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Server.PlayerConnectionEventArgs">
            <summary>
            Called when the player connection status changes.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Server.PlayerConnectionEventArgs.#ctor(LibMinecraft.Classic.Server.ConnectionState,LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Server.PlayerConnectionEventArgs"/> class.
            </summary>
            <param name="ConnectionState">State of the connection.</param>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Server.PlayerConnectionEventArgs.ConnectionState">
            <summary>
            Gets or sets the state of the connection.
            </summary>
            <value>The state of the connection.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Server.PlayerConnectionEventArgs.Client">
            <summary>
            Gets or sets the client.
            </summary>
            <value>The client.</value>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Server.ConnectionState">
            <summary>
            The connection state
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:LibMinecraft.Classic.Server.ConnectionState.Connected">
            <summary>
            Client is connected
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Server.ConnectionState.Disconnected">
            <summary>
            Client is connected.
            </summary>
        </member>
        <member name="T:LibMinecraft.Classic.Model.Packets.IdentificationPacket">
            <summary>
            Packet sent to server when logging in.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.IdentificationPacket.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.Packets.IdentificationPacket"/> class.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.IdentificationPacket.#ctor(System.String,System.String,LibMinecraft.Classic.Model.UserType)">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.Packets.IdentificationPacket"/> class.
            </summary>
            <param name="UserNameOrServerName">Name of the user name or server.</param>
            <param name="VerificationKeyOrMOTD">The verification key or MOTD.</param>
            <param name="UserType">Type of the user.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.IdentificationPacket.ReadPacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.IdentificationPacket.ReadPacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.IdentificationPacket.WritePacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.IdentificationPacket.WritePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.IdentificationPacket.HandlePacket(LibMinecraft.Classic.Server.ClassicServer,LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Server">The server.</param>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.IdentificationPacket.HandlePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.IdentificationPacket.ProtocolVersion">
            <summary>
            Gets or sets the protocol version.
            </summary>
            <value>The protocol version.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.IdentificationPacket.UserNameOrServerName">
            <summary>
            Gets or sets the name of the user name.
            </summary>
            <value>The username or server name..</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.IdentificationPacket.VerificationKeyOrMOTD">
            <summary>
            Gets or sets the verification key or MOTD.
            </summary>
            <value>The verification key or MOTD.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.IdentificationPacket.UserType">
            <summary>
            Gets or sets the type of the user.
            </summary>
            <value>The type of the user.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.IdentificationPacket.PacketID">
            <summary>
            Gets the packet ID.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.IdentificationPacket.Length">
            <summary>
            -1 for non-explicit lengths
            Includes packet ID
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.IdentificationPacket.Payload">
            <summary>
            Gets the payload.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.RedClothBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.AirBlock">
            <summary>
            An Air block (ID = 0)
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.AirBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Server.ClassicServer">
            <summary>
            Runs the classic network protocol as a server.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:LibMinecraft.Classic.Server.ClassicServer.MinecraftVersion">
            <summary>
            The Minecraft Version (used in heartbeat)
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Server.ClassicServer.HeartbeatRequestUrl">
            <summary>
            The heartbeat request URL.
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Server.ClassicServer.listener">
            <summary>
            The server listener.
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Server.ClassicServer.netWorker">
            <summary>
            The main server tick.
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Server.ClassicServer.heartBeat">
            <summary>
            The heartbeat tick.
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Server.ClassicServer.ServerSalt">
            <summary>
            The server salt.
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Server.ClassicServer.MainLevel">
            <summary>
            The main level of the server.
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Server.ClassicServer.WorldDirectory">
            <summary>
            The world directory.
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Server.ClassicServer.cancelprepacket">
            <summary>
            Cancel prepacket event
            </summary>
        </member>
        <member name="M:LibMinecraft.Classic.Server.ClassicServer.Start(LibMinecraft.Classic.Model.MinecraftClassicServer,System.String,System.String)">
            <summary>
            Starts the server with the provided server model.
            </summary>
            <param name="Server">The server model to represent this server.</param>
            <param name="WorldDirectory">The world directory.</param>
            <param name="WorldName">Name of the world.</param>
            <returns>The URL to use for connecting to this server via minecraft.net</returns>
            <remarks>This listens on all available network interfaces.</remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Server.ClassicServer.Start(LibMinecraft.Classic.Model.MinecraftClassicServer,System.Net.IPEndPoint)">
            <summary>
            Starts the server with the provided server model,
            on the specified local end point.
            </summary>
            <param name="Server">The server model to represent this server.</param>
            <param name="LocalEndPoint">The local end point.</param>
            <returns>The URL to use for connecting to this server via minecraft.net</returns>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Server.ClassicServer.DoHeartbeat(System.Object)">
            <summary>
            Does the heartbeat.
            </summary>
            <param name="o">The object.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Server.ClassicServer.DoWork(System.Object)">
            <summary>
            Does the work.
            </summary>
            <param name="o">The object.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Server.ClassicServer.EnqueueToAllClients(LibMinecraft.Classic.Model.Packets.Packet,LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Enqueues a packet to all clients.
            </summary>
            <param name="Packet">The packet.</param>
            <param name="IgnoreClient">If specified, the client won't recieve the packet.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Server.ClassicServer.EnqueueToAllClientsInWorld(LibMinecraft.Classic.Model.Packets.Packet,System.String,LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Enqueues to all clients in a certain world.
            </summary>
            <param name="Packet">The packet.</param>
            <param name="World">The world.</param>
            <param name="IgnoreClient">If specified, the client won't recieve the packet.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Server.ClassicServer.LoadAllClientsToClient(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Loads all players to client.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Server.ClassicServer.ServerUrl">
            <summary>
            Gets the server URL.
            </summary>
            <value>The server URL.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Server.ClassicServer.Server">
            <summary>
            Gets or sets the server model.
            </summary>
            <value>The server.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Server.ClassicServer.Clients">
            <summary>
            A list of all connected clients.
            </summary>
            <value>The clients.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Server.ClassicServer.Worlds">
            <summary>
            A list of all the worlds.
            </summary>
            <value>The worlds.</value>
            <remarks></remarks>
        </member>
        <member name="E:LibMinecraft.Classic.Server.ClassicServer.OnPlayerConnectionChanged">
            <summary>
            Occurs when the players connection state changes.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.Packets.DespawnPlayerPacket">
            <summary>
            Packet sent to clients when player despawns.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:LibMinecraft.Classic.Model.Packets.DespawnPlayerPacket.PlayerID">
            <summary>
            The PlayerID of the Player who is despawning.
            </summary>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.DespawnPlayerPacket.#ctor(System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.Packets.DespawnPlayerPacket"/> class.
            </summary>
            <param name="PlayerID">The player ID.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.DespawnPlayerPacket.ReadPacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.DespawnPlayerPacket.ReadPacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.DespawnPlayerPacket.WritePacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.DespawnPlayerPacket.WritePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.DespawnPlayerPacket.HandlePacket(LibMinecraft.Classic.Server.ClassicServer,LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Server">The server.</param>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.DespawnPlayerPacket.HandlePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.DespawnPlayerPacket.PacketID">
            <summary>
            Gets the packet ID.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.DespawnPlayerPacket.Length">
            <summary>
            -1 for non-explicit lengths
            Includes packet ID
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.DespawnPlayerPacket.Payload">
            <summary>
            Gets the payload.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.PinkClothBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.OrangeClothBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.BookshelfBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Server.RemoteClient">
            <summary>
            The Remote Client
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Server.RemoteClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Server.RemoteClient"/> class.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Server.RemoteClient.TcpClient">
            <summary>
            Gets or sets the TCP client.
            </summary>
            <value>The TCP client.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Server.RemoteClient.EndPoint">
            <summary>
            Gets or sets the end point (IP Address).
            </summary>
            <value>The end point.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Server.RemoteClient.IpAddress">
            <summary>
            Gets the string representation of the client's ip address.
            </summary>
            <value>The ip address.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Server.RemoteClient.UserName">
            <summary>
            Gets or sets the name of the user.
            </summary>
            <value>The name of the user.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Server.RemoteClient.PlayerID">
            <summary>
            Gets or sets the player ID.
            </summary>
            <value>The player ID.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Server.RemoteClient.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Server.RemoteClient.World">
            <summary>
            Gets or sets the world.
            </summary>
            <value>The world.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Server.RemoteClient.Yaw">
            <summary>
            Gets or sets the yaw.
            </summary>
            <value>The yaw.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Server.RemoteClient.Pitch">
            <summary>
            Gets or sets the pitch.
            </summary>
            <value>The pitch.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Server.RemoteClient.LoggedIn">
            <summary>
            Gets or sets a value indicating whether logged in.
            </summary>
            <value><c>true</c> if logged in; otherwise, <c>false</c>.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Server.RemoteClient.UserType">
            <summary>
            Gets or sets the type of the user.
            </summary>
            <value>The type of the user.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Server.RemoteClient.PacketQueue">
            <summary>
            Gets or sets the packet queue.
            </summary>
            <value>The packet queue.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Server.RemoteClient.Tags">
            <summary>
            Gets or sets the tags.
            </summary>
            <value>The tags.</value>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.World">
            <summary>
            Represents a Minecraft Classic level.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.World.#ctor(System.String,System.Int16,System.Int16,System.Int16,LibMinecraft.Classic.Model.Vector3)">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.World"/> class.
            </summary>
            <param name="WorldName">Name of the world.</param>
            <param name="Height">The height.</param>
            <param name="Width">The width.</param>
            <param name="Depth">The depth.</param>
            <param name="SpawnLocation">The spawn location.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.World.GetBlock(LibMinecraft.Classic.Model.Vector3)">
            <summary>
            Gets a block from the world.
            </summary>
            <param name="position">The position of the requested block.</param>
            <returns>The block at the requested coordinates.</returns>
            <remarks>This will generate a new chunk for the requested block if one does not exist.</remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.World.SetBlock(LibMinecraft.Classic.Model.Vector3,LibMinecraft.Classic.Model.Block)">
            <summary>
            Sets a block in the world.
            </summary>
            <param name="position">The position of the updated block.</param>
            <param name="value">The block to set.</param>
            <remarks>This will generate a new chunk for the requested block if one does not exist.
            This method also fires OnBlockChanged, which will cause block updates when used with
            LibMinecraft.Server.MultiplayerServer.</remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.World._SetBlock(LibMinecraft.Classic.Model.Vector3,System.Byte)">
            <summary>
            Sets a block in the level without firing event handlers.
            </summary>
            <param name="position">The position of the updated block.</param>
            <param name="value">The block to set.</param>
            <remarks>This will generate a new chunk for the requested block if one does not exist.
            This method will not fire OnBlockChanged.</remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.World.Save">
            <summary>
            Saves this instance.
            </summary>
            <remarks>This will use whichever format (binary or NBT) that was
            last used to save this level.</remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.World.SaveToBinary(System.String,System.String)">
            <summary>
            Saves this world to a given directory
            in the LibMinecraftClassic-only binary format.
            </summary>
            <param name="TargetDirectory">The target directory.</param>
            <param name="FileName">Name of the file.</param>
            <remarks>The resulting files are not compatible with the official Minecraft software.</remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.World.LoadFromBinary(System.String,System.String)">
            <summary>
            Loads the world in the LibMinecraftClassic-only
            binary format.
            </summary>
            <param name="TargetDirectory">The directory to load from</param>
            <param name="FileName">Name of the file.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.World.Compress(System.Byte[])">
            <summary>
            Compresses the specified byte array.
            </summary>
            <param name="input">The byte array.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.World.Decompress(System.Byte[])">
            <summary>
            Decompresses the specified byte array.
            </summary>
            <param name="gzip">The byte array.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.World.Find(System.String)">
            <summary>
            Finds the specified world.
            </summary>
            <param name="WorldName">Name of the world.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.World.AddWorld(LibMinecraft.Classic.Model.World)">
            <summary>
            Adds the world.
            </summary>
            <param name="world">The world.</param>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.World.Height">
            <summary>
            Gets or sets the level height.
            </summary>
            <value>The height.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.World.Width">
            <summary>
            Gets or sets the level height.
            </summary>
            <value>The height.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.World.Depth">
            <summary>
            Gets or sets the level depth.
            </summary>
            <value>The depth.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.World.Spawn">
            <summary>
            Gets or sets the default world spawn.
            </summary>
            <value>The spawn.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.World.Data">
            <summary>
            Gets the level data.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.World.WorldFile">
            <summary>
            Gets or sets the world save directory.
            </summary>
            <value>The world directory.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.World.WorldName">
            <summary>
            Gets or sets the name of the level.
            </summary>
            <value>The name of the level.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.World.Tags">
            <summary>
            Gets or sets the tags.
            </summary>
            <value>The tags.</value>
            <remarks></remarks>
        </member>
        <member name="E:LibMinecraft.Classic.Model.World.OnBlockChanged">
            <summary>
            Occurs when a block is changed.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.BlockSetEventArgs">
            <summary>
            Represents a changed block in a level
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.BlockSetEventArgs.#ctor(LibMinecraft.Classic.Model.Block,LibMinecraft.Classic.Model.Vector3)">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.BlockSetEventArgs"/> class.
            </summary>
            <param name="Block">The block.</param>
            <param name="Position">The position.</param>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.BlockSetEventArgs.Block">
            <summary>
            Gets or sets the block.
            </summary>
            <value>The block.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.BlockSetEventArgs.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model._ErrorException">
            <summary>
            Custom Exception Base
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model._ErrorException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model._ErrorException"/> class.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.InvalidLevelException">
            <summary>
            Throws exception when level is invalid.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.InvalidLevelException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.InvalidLevelException"/> class.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.CorruptLevelException">
            <summary>
            Throws exception when level is corrupt.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.CorruptLevelException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.CorruptLevelException"/> class.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.Packets.MessagePacket">
            <summary>
            Packet sent to server/client when sending/recieving packet.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.MessagePacket.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.Packets.MessagePacket"/> class.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.MessagePacket.#ctor(System.Byte,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.Packets.MessagePacket"/> class.
            </summary>
            <param name="PlayerID">The player ID.</param>
            <param name="Message">The message.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.MessagePacket.ReadPacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.MessagePacket.ReadPacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.MessagePacket.WritePacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.MessagePacket.WritePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.MessagePacket.HandlePacket(LibMinecraft.Classic.Server.ClassicServer,LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Server">The server.</param>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.MessagePacket.HandlePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.MessagePacket.PlayerID">
            <summary>
            Gets or sets the player ID.
            </summary>
            <value>The player ID.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.MessagePacket.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>The message.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.MessagePacket.PacketID">
            <summary>
            Gets the packet ID.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.MessagePacket.Length">
            <summary>
            -1 for non-explicit lengths
            Includes packet ID
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.MessagePacket.Payload">
            <summary>
            Gets the payload.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.WoodBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.Packets.PingPacket">
            <summary>
            Packet sent to client to make sure they have disconnected.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.PingPacket.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.Packets.PingPacket"/> class.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.PingPacket.ReadPacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.PingPacket.ReadPacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.PingPacket.WritePacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.PingPacket.WritePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.PingPacket.HandlePacket(LibMinecraft.Classic.Server.ClassicServer,LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Server">The server.</param>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.PingPacket.HandlePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.PingPacket.PacketID">
            <summary>
            Gets the packet ID.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.PingPacket.Length">
            <summary>
            -1 for non-explicit lengths
            Includes packet ID
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.PingPacket.Payload">
            <summary>
            Gets the payload.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.WoodenPlankBlock">
            <summary>
            A Wooden plank block (ID = 5)
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.WoodenPlankBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.IronBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.CoalOreBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.SandBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.LavaBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.GrassBlock">
            <summary>
            A Grass block (ID = 2)
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.GrassBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Server.PrePacketEventArgs.Packet">
            <summary>
            Gets or sets the packet type
            </summary>
            <value>The state of the connection.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Server.PrePacketEventArgs.Client">
            <summary>
            Gets or sets the client.
            </summary>
            <value>The client.</value>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.Packets.DisconnectPlayerPacket">
            <summary>
            Packet sent to client when kicked.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.DisconnectPlayerPacket.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.Packets.DisconnectPlayerPacket"/> class.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.DisconnectPlayerPacket.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.Packets.DisconnectPlayerPacket"/> class.
            </summary>
            <param name="Reason">The reason.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.DisconnectPlayerPacket.ReadPacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.DisconnectPlayerPacket.ReadPacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.DisconnectPlayerPacket.WritePacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.DisconnectPlayerPacket.WritePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.DisconnectPlayerPacket.HandlePacket(LibMinecraft.Classic.Server.ClassicServer,LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Server">The server.</param>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.DisconnectPlayerPacket.HandlePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.DisconnectPlayerPacket.Reason">
            <summary>
            Gets or sets the reason.
            </summary>
            <value>The reason.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.DisconnectPlayerPacket.PacketID">
            <summary>
            Gets the packet ID.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.DisconnectPlayerPacket.Length">
            <summary>
            -1 for non-explicit lengths
            Includes packet ID
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.DisconnectPlayerPacket.Payload">
            <summary>
            Gets the payload.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.PacketID">
            <summary>
            Represents the various packets used to communicate
            between server and client.
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Model.PacketID.Identification">
            <summary>
            Sent when the client logs into the server.
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Model.PacketID.Ping">
            <summary>
            Sent to client to make sure they have disconnected.
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Model.PacketID.LevelInitialize">
            <summary>
            Sent to client to initate a level transfer.
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Model.PacketID.LevelDataChunk">
            <summary>
            Sent to client with the level data and data sent percentage.
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Model.PacketID.LevelFinalize">
            <summary>
            Sent to signify the level has been transferred.
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Model.PacketID.ClientSetBlock">
            <summary>
            Sent to the client to change block client-side
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Model.PacketID.ServerSetBlock">
            <summary>
            Sent to the server to change block server-side
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Model.PacketID.SpawnPlayer">
            <summary>
            Sent to client to spawn specified player.
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Model.PacketID.PositionAndOrientation">
            <summary>
            Teleports/Changes Position and Orientation of player.
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Model.PacketID.PositionAndOrientationUpdate">
            <summary>
            Teleports/Changes Position and Orientation of player.
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Model.PacketID.PositionUpdate">
            <summary>
            Changes Position of player.
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Model.PacketID.OrientationUpdate">
            <summary>
            Changes Orientation of player.
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Model.PacketID.DespawnPlayer">
            <summary>
            Sent to client to despawn specified player.
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Model.PacketID.Message">
            <summary>
            Sent to client/server to show/handle message.
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Model.PacketID.DisconnectPlayer">
            <summary>
            Sent to client to disconnect player.
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Model.PacketID.UpdateUserType">
            <summary>
            Sent to player to enable/disable bedrock placing.
            </summary>
        </member>
        <member name="T:LibMinecraft.Classic.Model.UserType">
            <summary>
            Usertypes for packet UpdateUserType
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:LibMinecraft.Classic.Model.UserType.Normal">
            <summary>
            Normal Players (cannot break bedrock)
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Model.UserType.Op">
            <summary>
            OPS (Can break bedrock)
            </summary>
        </member>
        <member name="P:LibMinecraft.Classic.Model.SlabBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.BedrockBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.GrayClothBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.DirtBlock">
            <summary>
            A Dirt block (ID = 3)
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.DirtBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.StationaryWaterBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.SpongeBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.ObsidianBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.MagentaClothBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.BrownMushroomBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.Packets.ServerSetBlockPacket">
            <summary>
            Packet sent to server when placing a block.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.ServerSetBlockPacket.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.Packets.ServerSetBlockPacket"/> class.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.ServerSetBlockPacket.#ctor(LibMinecraft.Classic.Model.Vector3,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.Packets.ServerSetBlockPacket"/> class.
            </summary>
            <param name="Position">The position.</param>
            <param name="Type">The type.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.ServerSetBlockPacket.ReadPacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.ServerSetBlockPacket.ReadPacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.ServerSetBlockPacket.WritePacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.ServerSetBlockPacket.WritePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.ServerSetBlockPacket.HandlePacket(LibMinecraft.Classic.Server.ClassicServer,LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Server">The server.</param>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.ServerSetBlockPacket.HandlePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.ServerSetBlockPacket.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.ServerSetBlockPacket.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.ServerSetBlockPacket.PacketID">
            <summary>
            Gets the packet ID.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.ServerSetBlockPacket.Length">
            <summary>
            -1 for non-explicit lengths
            Includes packet ID
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.ServerSetBlockPacket.Payload">
            <summary>
            Gets the payload.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.Vector3">
            <summary>
            Represents a location in the Minecraft world
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:LibMinecraft.Classic.Model.Vector3.X">
            <summary>
            The X coordinate
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Model.Vector3.Y">
            <summary>
            The Y coordinate
            </summary>
        </member>
        <member name="F:LibMinecraft.Classic.Model.Vector3.Z">
            <summary>
            The Z coordinate
            </summary>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Vector3.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.Vector3"/> class.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Vector3.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.Vector3"/> class.
            </summary>
            <param name="value">The value.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Vector3.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.Vector3"/> class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="z">The z.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Vector3.#ctor(LibMinecraft.Classic.Model.Vector3)">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.Vector3"/> class.
            </summary>
            <param name="other">The other.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Vector3.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Vector3.op_Addition(LibMinecraft.Classic.Model.Vector3,LibMinecraft.Classic.Model.Vector3)">
            <summary>
            Adds two vectors together.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Vector3.op_Subtraction(LibMinecraft.Classic.Model.Vector3,LibMinecraft.Classic.Model.Vector3)">
            <summary>
            Subtracts one vector from another.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Vector3.op_Multiply(LibMinecraft.Classic.Model.Vector3,LibMinecraft.Classic.Model.Vector3)">
            <summary>
            Multiplies two vectors together.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Vector3.op_Division(LibMinecraft.Classic.Model.Vector3,LibMinecraft.Classic.Model.Vector3)">
            <summary>
            Divides one vector from another.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Vector3.op_Addition(LibMinecraft.Classic.Model.Vector3,System.Double)">
            <summary>
            Adds a double to all components of a vector.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Vector3.op_Subtraction(LibMinecraft.Classic.Model.Vector3,System.Double)">
            <summary>
            Subtracts a double from all components of a vector.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Vector3.op_Multiply(LibMinecraft.Classic.Model.Vector3,System.Double)">
            <summary>
            Multiplies a double by all components of a vector.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Vector3.op_Division(LibMinecraft.Classic.Model.Vector3,System.Double)">
            <summary>
            Divides all components of a vector by a double.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Vector3.Equals(LibMinecraft.Classic.Model.Vector3)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.</returns>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Vector3.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Vector3.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Vector3.DistanceTo(LibMinecraft.Classic.Model.Vector3)">
            <summary>
            Gets the distance between this and another Vector3.
            </summary>
            <param name="other">The Vector3 to compare to.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Vector3.Floor">
            <summary>
            Floors this instance.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Vector3.Clamp(System.Double)">
            <summary>
            Clamps to the specified minimum.
            </summary>
            <param name="Minimum">The minimum value.</param>
            <returns></returns>
            <remarks>Ensures that the absolute value of all components are less than or equal to the given minimum.</remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Vector3.Zero">
            <summary>
            A Vector3 with all components set to 0.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Vector3.One">
            <summary>
            A Vector3 with all components set to 1.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Vector3.Forward">
            <summary>
            A Vector3 whose Z coordinate is set to 1.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Vector3.Backward">
            <summary>
            A Vector3 whose Z coordinate is set to -1.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Vector3.Up">
            <summary>
            A Vector3 whose Y coordinate is set to 1.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Vector3.Down">
            <summary>
            A Vector3 whose Y coordinate is set to -1.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Vector3.Left">
            <summary>
            A Vector3 whose X coordinate is set to 1.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Vector3.Right">
            <summary>
            A Vector3 whose X coordinate is set to -1.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.IronOreBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.GlassBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.BlueClothBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Client.ClassicClient">
            <summary>
            This is the class for the Classic Client
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.Packets.PositionAndOrientationPacket">
            <summary>
            Packet sent to server/client when teleporting/moving. This is the most inefficent packet if only movement or rotation has changed.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.PositionAndOrientationPacket.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.Packets.PositionAndOrientationPacket"/> class.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.PositionAndOrientationPacket.#ctor(System.Byte,LibMinecraft.Classic.Model.Vector3,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.Packets.PositionAndOrientationPacket"/> class.
            </summary>
            <param name="PlayerID">The player ID.</param>
            <param name="Position">The position.</param>
            <param name="Yaw">The yaw.</param>
            <param name="Pitch">The pitch.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.PositionAndOrientationPacket.ReadPacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.PositionAndOrientationPacket.ReadPacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.PositionAndOrientationPacket.WritePacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.PositionAndOrientationPacket.WritePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.PositionAndOrientationPacket.HandlePacket(LibMinecraft.Classic.Server.ClassicServer,LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Server">The server.</param>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.PositionAndOrientationPacket.HandlePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.PositionAndOrientationPacket.PlayerID">
            <summary>
            Gets or sets the player ID.
            </summary>
            <value>The player ID.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.PositionAndOrientationPacket.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.PositionAndOrientationPacket.Yaw">
            <summary>
            Gets or sets the yaw.
            </summary>
            <value>The yaw.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.PositionAndOrientationPacket.Pitch">
            <summary>
            Gets or sets the pitch.
            </summary>
            <value>The pitch.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.PositionAndOrientationPacket.PacketID">
            <summary>
            Gets the packet ID.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.PositionAndOrientationPacket.Length">
            <summary>
            -1 for non-explicit lengths
            Includes packet ID
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.PositionAndOrientationPacket.Payload">
            <summary>
            Gets the payload.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.Packets.ClientSetBlockPacket">
            <summary>
            Packet sent to client when block is placed.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.ClientSetBlockPacket.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.Packets.ClientSetBlockPacket"/> class.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.ClientSetBlockPacket.#ctor(LibMinecraft.Classic.Model.Vector3,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.Packets.ClientSetBlockPacket"/> class.
            </summary>
            <param name="Position">The position.</param>
            <param name="Mode">The mode.</param>
            <param name="Type">The type.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.ClientSetBlockPacket.ReadPacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.ClientSetBlockPacket.ReadPacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.ClientSetBlockPacket.WritePacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.ClientSetBlockPacket.WritePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.ClientSetBlockPacket.HandlePacket(LibMinecraft.Classic.Server.ClassicServer,LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Server">The server.</param>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.ClientSetBlockPacket.HandlePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.ClientSetBlockPacket.Position">
            <summary>
            Gets or sets the position of the block.
            </summary>
            <value>The position.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.ClientSetBlockPacket.Mode">
            <summary>
            Gets or sets the mode (1 or 0).
            </summary>
            <value>The mode. 1 = place, 0 = destroy</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.ClientSetBlockPacket.Type">
            <summary>
            Gets or sets the block type.
            </summary>
            <value>The type.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.ClientSetBlockPacket.PacketID">
            <summary>
            Gets the packet ID.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.ClientSetBlockPacket.Length">
            <summary>
            -1 for non-explicit lengths
            Includes packet ID
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.ClientSetBlockPacket.Payload">
            <summary>
            Gets the payload.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.LimeClothBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.GoldOreBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.StoneBlock">
            <summary>
            A Stone block (ID = 1)
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.StoneBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.WaterBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.RoseBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.GoldBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.DoubleSlabBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.VioletClothBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.RedMushroomBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.LeafBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.DandelionBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.CyanClothBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.CobblestoneBlock">
            <summary>
            A Cobblestone block (ID = 4)
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.CobblestoneBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.AquaGreenClothBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.Packets.WorldFinalizePacket">
            <summary>
            Packet sent to client when finished sending the world.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.WorldFinalizePacket.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.Packets.WorldFinalizePacket"/> class.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.WorldFinalizePacket.#ctor(System.Int16,System.Int16,System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.Packets.WorldFinalizePacket"/> class.
            </summary>
            <param name="Height">The height.</param>
            <param name="Width">The width.</param>
            <param name="Depth">The depth.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.WorldFinalizePacket.ReadPacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.WorldFinalizePacket.ReadPacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.WorldFinalizePacket.WritePacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.WorldFinalizePacket.WritePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.WorldFinalizePacket.HandlePacket(LibMinecraft.Classic.Server.ClassicServer,LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Server">The server.</param>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.WorldFinalizePacket.HandlePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.WorldFinalizePacket.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.WorldFinalizePacket.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.WorldFinalizePacket.Depth">
            <summary>
            Gets or sets the depth.
            </summary>
            <value>The depth.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.WorldFinalizePacket.PacketID">
            <summary>
            Gets the packet ID.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.WorldFinalizePacket.Length">
            <summary>
            -1 for non-explicit lengths
            Includes packet ID
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.WorldFinalizePacket.Payload">
            <summary>
            Gets the payload.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.Packets.SpawnPlayerPacket">
            <summary>
            Packet sent to server when spawning. If player hasn't despawned, this simply creates another player, and the other player is a "ghost".
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.SpawnPlayerPacket.#ctor(System.Byte,System.String,LibMinecraft.Classic.Model.Vector3,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.Packets.SpawnPlayerPacket"/> class.
            </summary>
            <param name="PlayerID">The player ID.</param>
            <param name="PlayerName">Name of the player.</param>
            <param name="Position">The position.</param>
            <param name="Yaw">The yaw.</param>
            <param name="Pitch">The pitch.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.SpawnPlayerPacket.ReadPacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.SpawnPlayerPacket.ReadPacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.SpawnPlayerPacket.WritePacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.SpawnPlayerPacket.WritePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.SpawnPlayerPacket.HandlePacket(LibMinecraft.Classic.Server.ClassicServer,LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Server">The server.</param>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.SpawnPlayerPacket.HandlePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.SpawnPlayerPacket.PlayerID">
            <summary>
            Gets or sets the player ID.
            </summary>
            <value>The player ID.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.SpawnPlayerPacket.PlayerName">
            <summary>
            Gets or sets the name of the player.
            </summary>
            <value>The name of the player.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.SpawnPlayerPacket.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.SpawnPlayerPacket.Yaw">
            <summary>
            Gets or sets the yaw.
            </summary>
            <value>The yaw.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.SpawnPlayerPacket.Pitch">
            <summary>
            Gets or sets the pitch.
            </summary>
            <value>The pitch.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.SpawnPlayerPacket.PacketID">
            <summary>
            Gets the packet ID.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.SpawnPlayerPacket.Length">
            <summary>
            -1 for non-explicit lengths
            Includes packet ID
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.SpawnPlayerPacket.Payload">
            <summary>
            Gets the payload.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.StationaryLavaBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.SaplingBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.MossyCobblestoneBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.Packets.WorldDataChunkPacket">
            <summary>
            Packet sent to client when sending the world.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.WorldDataChunkPacket.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.Packets.WorldDataChunkPacket"/> class.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.WorldDataChunkPacket.#ctor(System.Int16,System.Byte[],System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.Packets.WorldDataChunkPacket"/> class.
            </summary>
            <param name="ChunkLength">Length of the chunk.</param>
            <param name="ChunkData">The chunk data.</param>
            <param name="PercentageComplete">The percentage complete.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.WorldDataChunkPacket.ReadPacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.WorldDataChunkPacket.ReadPacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.WorldDataChunkPacket.WritePacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.WorldDataChunkPacket.WritePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.WorldDataChunkPacket.HandlePacket(LibMinecraft.Classic.Server.ClassicServer,LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Server">The server.</param>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.WorldDataChunkPacket.HandlePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.WorldDataChunkPacket.ChunkLength">
            <summary>
            Gets or sets the length of the chunk.
            </summary>
            <value>The length of the chunk.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.WorldDataChunkPacket.ChunkData">
            <summary>
            Gets or sets the chunk data.
            </summary>
            <value>The chunk data.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.WorldDataChunkPacket.PercentageComplete">
            <summary>
            Gets or sets the percentage complete.
            </summary>
            <value>The percentage complete.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.WorldDataChunkPacket.PacketID">
            <summary>
            Gets the packet ID.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.WorldDataChunkPacket.Length">
            <summary>
            -1 for non-explicit lengths
            Includes packet ID
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.WorldDataChunkPacket.Payload">
            <summary>
            Gets the payload.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.Packets.InvalidPacket">
            <summary>
            Used to describe any packet with an
            invalid packet ID.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.InvalidPacket.ReadPacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.InvalidPacket.ReadPacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Reads the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.InvalidPacket.WritePacket(LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.InvalidPacket.WritePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Writes the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.InvalidPacket.HandlePacket(LibMinecraft.Classic.Server.ClassicServer,LibMinecraft.Classic.Server.RemoteClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Server">The server.</param>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.Packets.InvalidPacket.HandlePacket(LibMinecraft.Classic.Client.ClassicClient)">
            <summary>
            Handles the packet.
            </summary>
            <param name="Client">The client.</param>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.InvalidPacket.PacketID">
            <summary>
            Gets the packet ID.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.InvalidPacket.Length">
            <summary>
            -1 for non-explicit lengths
            Includes packet ID
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.Packets.InvalidPacket.Payload">
            <summary>
            Gets the payload.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:LibMinecraft.Classic.Model.MinecraftClassicServer">
            <summary>
            Minecraft Classic Server Model
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:LibMinecraft.Classic.Model.MinecraftClassicServer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LibMinecraft.Classic.Model.MinecraftClassicServer"/> class.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.MinecraftClassicServer.Port">
            <summary>
            Gets or sets the port.
            </summary>
            <value>The port.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.MinecraftClassicServer.MaxPlayers">
            <summary>
            Gets or sets the max players.
            </summary>
            <value>The max players.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.MinecraftClassicServer.Name">
            <summary>
            Gets or sets the name of the server.
            </summary>
            <value>The name.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.MinecraftClassicServer.Private">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:LibMinecraft.Classic.Model.MinecraftClassicServer"/> is private (in the server list).
            </summary>
            <value><c>true</c> if private; otherwise, <c>false</c>.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.MinecraftClassicServer.MotD">
            <summary>
            Gets or sets the Message of the Day.
            </summary>
            <value>The Message of the Day.</value>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.TNTBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.PurpleClothBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.IndigoClothBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.GreenClothBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.BrickBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:LibMinecraft.Classic.Model.BlackClothBlock.BlockID">
            <summary>
            The Block ID for this block
            </summary>
            <remarks></remarks>
        </member>
    </members>
</doc>
